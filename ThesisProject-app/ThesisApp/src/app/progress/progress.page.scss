@import "~compass-sass-mixins/lib/compass/css3";
@import url('https://fonts.googleapis.com/css?family=Titillium+Web:200,200i,300,300i,400,400i,600,600i,700,700i,900');

body {
    font-family: "Titillium Web", sans-serif;
    margin: 0 auto;
    cursor: url('https://ionicframework.com/img/finger.png'), auto;
}

.copy ion-icon{
    font-size: 1rem;
}

.copy{
	margin-top: -153px;
	margin-left: 197px;
}

.copy ion-label{
	font-size: 16px;
}

.ticked ion-icon{
    font-size: 1rem;
}

.ticked{
	margin-top: 19px;
	margin-left: 197px;
}

.ticked ion-label{
	font-size: 16px;
}

// VARS
$circle-width: 0.09em;
$circle-width-hover: 0.07em;

// colors default
$primary-color: #000000; // czarny
$secondary-color: #dfe8ed; //szary bcg
$bg-color: #ffffff; //srodkowy bezowy 

// colors customized
$primary-color-blue: #30bae7;
$primary-color-orange: #eb7d4b; 
$primary-color-span: #3c4761;

// CIRCLE
// classes 2 extend
.rect-auto{
	clip: rect(auto, auto, auto, auto);
}

.pie {
	position: absolute;
	border: $circle-width solid $primary-color;
	width: 1 - (2 * $circle-width);
	height: 1 - (2 * $circle-width);
	clip: rect(0em, 0.5em, 1em, 0em);
	border-radius: 50%;
	@include rotate(0deg);
}

.pie-fill {
	@include rotate(180deg);
}

.title{
    margin-top: 35px;
    margin-left: 43px;
    color: #748073;
    font-size: 19px;
    font-weight: bold;
}

.test{
    margin-top: 110px;
    margin-left: 81px;
    color: #748073;
    font-size: 19px;
    font-weight: bold;
}

.wrapper {
  width: 1200px;
  margin: 0 auto;
  overflow: hidden;
}

// main
.c100 {

	*, *:before, *:after {
		@include box-sizing(content-box);
	}

	position: relative;
	font-size: 160px;
	width: 1em;
	height: 1em;
	border-radius: 50%;
    float: left;
    margin-top: 0.2em;
	margin-left: 0.1em;
	background-color: $secondary-color;

// 	// center circle to its parent
// 	&.center{
// 		float: none;
// 		margin: 0 auto;
// 	}

// 	&.small{
// 		font-size: 80px;
// 	}

	// centered value inside circle
	> .text {
		position: absolute;
		width: 100%;
		z-index: 1;
		left: 2.4em;
		top: 1em;
		width: 5em;
		line-height: 5em;
		font-size: 16px;
		color: $primary-color-span;
		display: block;
		text-align: center;
		white-space: nowrap;
		@include transition-property(all);
		@include transition-duration(0.2s);
		@include transition-timing-function(ease-out);
    }
    
    > span {
		position: absolute;
		width: 100%;
		z-index: 1;
		left: 0;
		top: 0.4em;
		width: 5em;
		line-height: 5em;
		font-size: 0.2em;
		color: $primary-color-span;
		display: block;
		text-align: center;
		white-space: nowrap;
		@include transition-property(all);
		@include transition-duration(0.2s);
		@include transition-timing-function(ease-out);
	}

	// background inside the circle
	&:after{
		position: absolute;
		top: $circle-width;
		left: $circle-width;
		display: block;
		content: " ";
		border-radius: 50%;
		background-color: $bg-color;
		width: 1 - (2 * $circle-width);
		height: 1 - (2 * $circle-width);
		@include transition-property(all);
		@include transition-duration(0.2s);
		@include transition-timing-function(ease-in);

	}

	// the slice (mask)
	.slice {
		position: absolute;
		width: 1em;
		height: 1em;
		clip: rect(0em, 1em, 1em, 0.5em);
	}

	// circle to show the status
	.bar {
		@extend .pie;
	}


	// loop to create all needed elements automatically
	@for $j from 51 through 100 {

		&.p#{$j} .slice {
			@extend .rect-auto;
		}

		&.p#{$j} .bar:after{
			@extend .pie-fill;
		}

		&.p#{$j} .fill{
			@extend .pie;
			@extend .pie-fill;
		}

	}

	// loop to rotate all 100 circles
	@for $j from 1 through 100 {
		&.p#{$j} .bar {
			@include rotate((360/100*$j) + deg);
		}
    }
    
    // hover styles
	&:hover{

		cursor: default;

		&:after{
			top: $circle-width-hover;
			left: $circle-width-hover;
			width: 1 - (2 * $circle-width-hover);
			height: 1 - (2 * $circle-width-hover);
		}

    }
    
    // blue
	&.blue{
		.bar, .fill { border-color: $primary-color-blue !important;}

		&:hover{
			> span { color: $primary-color-span;}
		}
	}
	
	// orange skin
	&.orange{

		.bar, .fill { border-color: $primary-color-orange !important;}

		&:hover{
			> span { color: $primary-color-span;}
		}

	}

}