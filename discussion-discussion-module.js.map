{"version":3,"sources":["webpack:///./src/app/discussion/discussion.module.ts","webpack:///./src/app/discussion/discussion.page.html","webpack:///./src/app/discussion/discussion.page.scss","webpack:///./src/app/discussion/discussion.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AAEV;AAEM;AAEnD,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC1B;CACF,CAAC;AAWF;IAAA;IAAmC,CAAC;IAAvB,oBAAoB;QAThC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,+DAAc,CAAC;SAC/B,CAAC;OACW,oBAAoB,CAAG;IAAD,2BAAC;CAAA;AAAH;;;;;;;;;;;;ACzBjC,oYAAoY,kBAAkB,oFAAoF,wBAAwB,oFAAoF,sBAAsB,qT;;;;;;;;;;;ACA5mB,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;ACAb;AACD;AACyB;AAEjC;AAOzC;IAIE,wBACS,eAAgC,EAChC,OAAgB;QADhB,oBAAe,GAAf,eAAe,CAAiB;QAChC,YAAO,GAAP,OAAO,CAAS;QAJlB,gBAAW,GAAG,EAAE,CAAC;IAKpB,CAAC;IAEL,iCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,qBAAW;YAC9C,KAAI,CAAC,WAAW,GAAG,WAAW,IAAI,EAAE,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;IAEK,qCAAY,GAAlB;;;;;;4BACgB,qBAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC;4BAC9C,SAAS,EAAE,qFAAiB;yBAE7B,CAAC;;wBAHI,KAAK,GAAG,SAGZ;wBAEF,KAAK,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,cAAI;4BAC5B,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,KAAK,SAAS;gCAAE,KAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;4BACpF,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,aAAa,EAAE,KAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,iBAAO,IAAK,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC9F,CAAC,CAAC,CAAC;wBAEI,qBAAM,KAAK,CAAC,OAAO,EAAE;4BAA5B,sBAAO,SAAqB,EAAC;;;;KAC9B;IA3BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,wGAAqC;;SAEtC,CAAC;+EAM0B,8DAAe;YACvB,sDAAO;OANd,cAAc,CA2F1B;IAAD,qBAAC;CAAA;AA3F0B","file":"discussion-discussion-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { DiscussionPage } from './discussion.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DiscussionPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [DiscussionPage]\r\n})\r\nexport class DiscussionPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n      <ion-buttons slot=\\\"start\\\">\\r\\n        <ion-menu-button></ion-menu-button>\\r\\n      </ion-buttons>\\r\\n    <ion-title>Discussion</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content padding>\\r\\n    <div *ngFor=\\\"let discussion of discussions\\\">\\r\\n      <ion-list>\\r\\n        <ion-item>\\r\\n          <ion-label>{{discussion.title}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>{{discussion.description}}</ion-label>\\r\\n        </ion-item>\\r\\n        <ion-item>\\r\\n          <ion-label>{{discussion.everybody}}</ion-label>\\r\\n        </ion-item>\\r\\n      </ion-list>\\r\\n    </div>\\r\\n  <ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\r\\n    <ion-fab-button (click)=\\\"presentModal()\\\">\\r\\n      <ion-icon name=\\\"arrow-dropleft\\\"></ion-icon>\\r\\n    </ion-fab-button>\\r\\n  </ion-fab>\\r\\n</ion-content>\\r\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rpc2N1c3Npb24vZGlzY3Vzc2lvbi5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { NewDiscussionPage } from '../new-discussion/new-discussion.page';\r\n\r\nimport { Storage } from '@ionic/storage';\r\n\r\n@Component({\r\n  selector: 'app-discussion',\r\n  templateUrl: './discussion.page.html',\r\n  styleUrls: ['./discussion.page.scss'],\r\n})\r\nexport class DiscussionPage implements OnInit {\r\n\r\n  public discussions = [];\r\n\r\n  constructor(\r\n    public modalController: ModalController, \r\n    public storage: Storage\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.storage.get('discussions').then(discussions => {\r\n      this.discussions = discussions || [];\r\n    });\r\n  }\r\n\r\n  async presentModal() {\r\n    const modal = await this.modalController.create({\r\n      component: NewDiscussionPage\r\n\r\n    });\r\n\r\n    modal.onDidDismiss().then(info => {\r\n      if (info.data.discussion !== undefined) this.discussions.push(info.data.discussion);\r\n      this.storage.set('discussions', this.discussions).then(success =>{ console.log(success); });\r\n    });\r\n\r\n    return await modal.present();\r\n  }\r\n\r\n  /* async presentNewDiscussion() {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'New Discussion',\r\n      inputs: [\r\n        {\r\n          type: 'text',\r\n          label: 'New Topic',\r\n          value: 'New Topic'\r\n        },\r\n        \r\n        {\r\n          type: 'text',\r\n          label: 'Message',\r\n          value: 'Message'\r\n        },\r\n\r\n        {\r\n          name: 'everybody',\r\n          type: 'checkbox',\r\n          label: 'Everybody can see this topic',\r\n          value: 'everybody',\r\n          checked: true\r\n        },\r\n\r\n        {\r\n          name: 'private',\r\n          type: 'checkbox',\r\n          label: 'Only me',\r\n          value: 'private',\r\n        },\r\n        \r\n        {\r\n          name: 'selected_friends',\r\n          type: 'checkbox',\r\n          label: 'To selected friends',\r\n          value: 'selected_friends',\r\n        },\r\n      ],\r\n      buttons: [\r\n        {\r\n          text: 'Post',\r\n          handler: () => {\r\n          this.router.navigateByUrl('/discussion');\r\n          console.log('Confirm Ok');\r\n          }\r\n        },\r\n\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: () => {\r\n            console.log('Confirm Cancel');\r\n          }\r\n        },\r\n      ]\r\n    });\r\n\r\n    \r\n\r\n    await alert.present();\r\n  } */\r\n}\r\n"],"sourceRoot":""}